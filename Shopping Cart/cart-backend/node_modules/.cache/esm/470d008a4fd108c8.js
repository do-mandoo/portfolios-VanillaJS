let Koa,Router,bodyParser,mongoose,cors,api;_4fd‍.w("koa",[["default",["Koa"],function(v){Koa=v}]]);_4fd‍.w("koa-router",[["default",["Router"],function(v){Router=v}]]);_4fd‍.w("koa-bodyparser",[["default",["bodyParser"],function(v){bodyParser=v}]]);_4fd‍.w("mongoose",[["default",["mongoose"],function(v){mongoose=v}]]);_4fd‍.w("@koa/cors",[["default",["cors"],function(v){cors=v}]]);_4fd‍.w("./api",[["default",["api"],function(v){api=v}]]);





// src>api>index.js가져오기


require('dotenv').config(); // .env파일에서 환경변수 불러오기

// 비구조화 할당을 통해 process.env 내부 값에 대한 레퍼런스 만들기
const { PORT, MONGO_URI } = process.env;

// mongoose
mongoose
  .connect(MONGO_URI, {
    useNewUrlParser: true,
    useUnifiedTopology: true,
    useFindAndModify: false
  })
  .then(() => {
    console.log('Connected to MongoDB!');
  })
  .catch(e => {
    _4fd‍.g.console.error(e);
  });

// Koa
const app = new Koa();

app.use(cors());
const router = new Router();

// 라우터 설정
router.use('/api', api.routes()); // api라우트 적용

// 라우터 적용 전에 bodyParser 적용
app.use(bodyParser());

// app 인스턴스에 라우터 적용
app.use(router.routes()).use(router.allowedMethods());

// PORT가 지정되어 있지 않다면 4000을 사용
const port = PORT || 4000; // 4000으로 지정해놨음.
app.listen(port, () => {
  _4fd‍.g.console.log('Listening on port', port);
});
